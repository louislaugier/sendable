services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - ./api/:/go/src/sendable/api
    ports:
      - 80:80
    networks:
      - vpc_local
    environment:
      - DOMAIN=${DOMAIN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - db
      - reacher
    restart: unless-stopped
  db:
    build:
      context: ./database
    env_file:
      - ./database/.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./api/files:/api_files/files:ro
    ports:
      - 5432:5432
    networks:
      - vpc_local
    restart: unless-stopped
  reacher:
    # image: reacherhq/backend:latest
    build:
      context: ./reacher
      dockerfile: Dockerfile
    environment:
      - RCH_WORKER_CONCURRENCY=10
      - RCH__FROM_EMAIL=hello@${DOMAIN}
      - RCH__HELLO_NAME=${DOMAIN}
      - RUST_LOG=debug
      # - RCH_AMQP_ADDR=amqp://localhost
      # - RCH_AMQP_ADDR=amqp://rabbitmq:5672
    networks:
      - vpc_local
    shm_size: '256m'
    # rabbitmq:
    #   image: rabbitmq:3.12-management
    # clamav:
    #   image: clamav/clamav:1.3.0-41
    restart: unless-stopped
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./frontend/app/:/frontend/app
  #     - ./frontend/public/:/frontend/public
  #     - ./frontend/package.json/:/frontend/package.json
  #     # - ./frontend/package-lock.json/:/frontend/package-lock.json
  #     - ./frontend/tailwind.config.ts/:/frontend/tailwind.config.ts
  #     - frontend_node_modules:/frontend/node_modules
  #   ports:
  #     - 3000:5173
  #   networks:
  #     - vpc_local
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
volumes:
  frontend_node_modules:
networks:
  vpc_local:
    # driver: overlay
    driver: bridge
